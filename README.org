#+TITLE: My dotfiles
#+AUTHOR: Tyler Dvorak    
#+EMAIL: github@tylerdvorak.com

#+BEGIN_QUOTE
These are my dotfiles, there are many like them but these ones are mine.

    -- Dotfiles Creed
#+END_QUOTE
* Why
I'm getting back into NixOS and wanted a stable configuration to build off of. I will be expanding into using Nix Flakes and opting for more home-manager usage when I can, but this at least gives me something to start with and looks clean from a directory standpoint.
I'm also going to be storing Windows Dots here as well. I have not decided how I plan to keep them managed, but am looking into tools like chezmoi.
* Structure
- ~nixos~ :: nixos configuration files
   - ~bin~ :: Bash scripts that might be useful
   - ~hosts~ :: Machine or host specific configuration
   - ~lib~ :: Contains a few useful functions used in this configuration.
   - ~config~ :: Contains all the configurations... as one would expect.
   - ~home~ :: My dotfiles and configuration for my user
   - ~nixos~ :: Configuration of the core NixOS experience
   - ~pkgs~ :: Contains overlays of packages that are not (yet) in ~nixpkgs~
   - ~modules~ :: Packages or services that requires their own configuration module
   - ~variables.nix~ :: Defines an attribute set containing variables available
         across the whole configuration, used for stuff like hostnames etc.
   - ~media~ :: Artwork and so on
- ~windows~
   - ~%HOMEPATH%~ :: Home Directory configurations
      - ~.glzr~ :: GlazeWM Configuration files
   - ~Microsoft.Powershell_profile.ps1~ :: I've included my profile for Powershell to init Zoxide and Oh My Posh
   - ~settings.json~ :: Windows Terminal Settings, including configured profiles and themes
   - ~winutil.json~ :: JSON Export of preconfigured settings for @ChrisTitusTech's amazing winutil. Easy installation of most applications used.
   - ~extras.ps1~ :: Basic PowerShell script to install anything not configured by CTT winutil automatically.
* How To :: nixos
1. Install NixOS on any machine and then clone these dotfiles into ~/etc/nixos/~.
2. Add the required channels:
   #+begin_src sh
     sudo nix-channel --add https://nixos.org/channels/nixos-unstable unstable
     sudo nix-channel --add https://github.com/rycee/home-manager/archive/release-19.09.tar.gz home-manager
     sudo nix-channel --update
   #+end_src
3. Set the path to the host configuration: ~export
   NIXOS_CONFIG=/etc/config/hosts/<host>/default.nix~.
4. Build the configuration and cross your fingers, ~sudo nixos-rebuild switch~.
5. ???
6. Profit!
* How To :: windows
1. Start with a clean Windows Install. Use winutil's MicroWin or some equivalent if you're trying to be extra minimal.
2. Run CTT winutil, using preconfigured winutil.json
3. Run extras.ps1
4. Move ~.glzr~ to ~%HOMEPATH%~
5. Move ~settings.json~ to ~%LOCALAPPDATA%\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState~
6. Move ~Microsoft.Powershell_profile.ps1~ to ~$USERPROFILE$~
7. Profit!
* Work To Do
I plan on scripting some of the setup for this to make it as simple as possible.
My goal would be to create an Ansible Playbook that will do this all for me ideally, but I will likely start by settling with simple scripts to run through the steps automatically.

* Inspiration
Chris Titus breaking his bazzite installation prompted this for me.
I stole this dotfiles blatently from and older version of https://github.com/sondr3 - so thank your for that!
